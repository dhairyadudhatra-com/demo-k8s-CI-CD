version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: mysql
    volumes:
      - ${HOME}/Work/aws-three-tier-web-architecture-workshop/application-code/mysqlbackup:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: dhairya@123
      MYSQL_DATABASE: demo
      MYSQL_USER: dhairya
      MYSQL_PASSWORD: dhairya
    networks:
      - demo
    
  nodejs-app:
    container_name: nodejs-app
    # ports:
    #   - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=dhairya
      - DB_PWD=dhairya
      - DB_DATABASE=demo
      - PORT=8080
    depends_on:
      - mysql
    networks:
      - demo
    build:
      context: ./app-tier
      dockerfile: Dockerfile

  reactjs-app:
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - nodejs-app
    # environment:
    # - REACT_APP_BACKEND_APP_HOST=nodejs-app
    # - REACT_APP_BACKEND_APP_PORT=8080
    networks:
      - demo
    build:
      context: ./web-tier
      args: 
        REACT_APP_BACKEND_APP_HOST: ${REACT_APP_BACKEND_APP_HOST}
        REACT_APP_BACKEND_APP_PORT: ${REACT_APP_BACKEND_APP_PORT}
      dockerfile: Dockerfile

networks:
  demo:
    driver: bridge
  frontend:
    driver: bridge
